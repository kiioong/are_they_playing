// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "kiioong/authentication_service/authentication_service.proto" (package "authentication_service", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Authentification } from "./authentication_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AuthentificationStatus } from "./authentication_service";
import type { AuthenticationData } from "./authentication_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service authentication_service.Authentification
 */
export interface IAuthentificationClient {
    /**
     * @generated from protobuf rpc: Login(authentication_service.AuthenticationData) returns (authentication_service.AuthentificationStatus);
     */
    login(input: AuthenticationData, options?: RpcOptions): UnaryCall<AuthenticationData, AuthentificationStatus>;
    /**
     * @generated from protobuf rpc: Logout(authentication_service.AuthenticationData) returns (authentication_service.AuthentificationStatus);
     */
    logout(input: AuthenticationData, options?: RpcOptions): UnaryCall<AuthenticationData, AuthentificationStatus>;
}
/**
 * @generated from protobuf service authentication_service.Authentification
 */
export class AuthentificationClient implements IAuthentificationClient, ServiceInfo {
    typeName = Authentification.typeName;
    methods = Authentification.methods;
    options = Authentification.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Login(authentication_service.AuthenticationData) returns (authentication_service.AuthentificationStatus);
     */
    login(input: AuthenticationData, options?: RpcOptions): UnaryCall<AuthenticationData, AuthentificationStatus> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticationData, AuthentificationStatus>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Logout(authentication_service.AuthenticationData) returns (authentication_service.AuthentificationStatus);
     */
    logout(input: AuthenticationData, options?: RpcOptions): UnaryCall<AuthenticationData, AuthentificationStatus> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AuthenticationData, AuthentificationStatus>("unary", this._transport, method, opt, input);
    }
}
